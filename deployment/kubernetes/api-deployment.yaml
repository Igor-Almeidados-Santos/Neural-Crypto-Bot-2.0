# deployment/kubernetes/api-deployment.yaml
# Kubernetes deployment para API Gateway do Neural Crypto Bot 2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: neural-crypto-bot
  labels:
    app: neural-crypto-bot
    component: api
    version: v2.0.0
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "Neural Crypto Bot API Gateway"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: neural-crypto-bot
      component: api
  template:
    metadata:
      labels:
        app: neural-crypto-bot
        component: api
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: neural-crypto-bot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: ghcr.io/your-username/neural-crypto-bot-api:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "ENVIRONMENT"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: neural-crypto-bot-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: neural-crypto-bot-secrets
              key: redis-url
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: neural-crypto-bot-secrets
              key: secret-key
        - name: BINANCE_API_KEY
          valueFrom:
            secretKeyRef:
              name: exchange-secrets
              key: binance-api-key
        - name: BINANCE_API_SECRET
          valueFrom:
            secretKeyRef:
              name: exchange-secrets
              key: binance-api-secret
        - name: COINBASE_API_KEY
          valueFrom:
            secretKeyRef:
              name: exchange-secrets
              key: coinbase-api-key
        - name: COINBASE_API_SECRET
          valueFrom:
            secretKeyRef:
              name: exchange-secrets
              key: coinbase-api-secret
        - name: PROMETHEUS_PORT
          value: "9090"
        - name: MAX_WORKERS
          value: "4"
        - name: TIMEOUT_KEEP_ALIVE
          value: "2"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: neural-crypto-bot-config
      - name: logs
        emptyDir: {}
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: neural-crypto-bot
  labels:
    app: neural-crypto-bot
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: neural-crypto-bot
    component: api
  sessionAffinity: None

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neural-crypto-bot-config
  namespace: neural-crypto-bot
  labels:
    app: neural-crypto-bot
data:
  app.yaml: |
    server:
      host: "0.0.0.0"
      port: 8000
      workers: 4
      timeout_keep_alive: 2
      access_log: true
    
    logging:
      level: INFO
      format: json
      handlers:
        - console
        - file
    
    trading:
      default_pairs:
        - BTC/USDT
        - ETH/USDT
        - SOL/USDT
      max_position_size: 0.05
      max_leverage: 2.0
      risk_free_rate: 0.03
    
    execution:
      timeout_seconds: 30
      max_retry_attempts: 3
      retry_delay_seconds: 2
    
    ml:
      batch_size: 128
      epochs: 100
      learning_rate: 0.001
      early_stopping_patience: 10
    
    monitoring:
      prometheus_enabled: true
      prometheus_port: 9090
      jaeger_enabled: true
      jaeger_agent_host: jaeger-agent
      jaeger_agent_port: 6831

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: neural-crypto-bot
  labels:
    app: neural-crypto-bot
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-pdb
  namespace: neural-crypto-bot
  labels:
    app: neural-crypto-bot
    component: api
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: neural-crypto-bot
      component: api