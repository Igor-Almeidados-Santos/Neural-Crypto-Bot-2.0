[tool.poetry]
name = "Oasis Trading System API"
version = "2.0.0"
description = "A robust, functional, and profitable cryptocurrency trading bot, refactored by Oasis."
authors = ["Igor Almeida dos Santos <igor.almeidadosantos@icloud.com>", "Oasis <contact@oasis.dev>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"

# Core Frameworks & API
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = {extras = ["email"], version = "^2.7.1"}
pydantic-settings = "^2.2.1"
httpx = "^0.27.0"

# Data & Performance
numpy = "^1.26.4"
pandas = "^2.2.2"
scipy = "^1.13.1"
statsmodels = "^0.14.2"

# Database & Cache
sqlalchemy = {extras = ["asyncio"], version = "^2.0.30"}
asyncpg = "^0.29.0"
redis = {version = "^5.0.4", extras = ["hiredis"]}
psycopg2-binary = "^2.9.9"

# Crypto Integration
ccxt = "^4.3.43"

# Machine Learning & MLOps
scikit-learn = "^1.5.0"
tensorflow = {version = "^2.16.1", optional = true} # Opcional para performance
torch = {version = "^2.3.1", optional = true}      # Opcional para performance
optuna = {version = "^3.6.1", optional = true}     # Opcional para hyperparameter tuning
mlflow = {version = "^2.14.1", optional = true}    # Opcional para experiment tracking

# Messaging & Events
kafka-python = "^2.0.2"

# Logging & Observability
loguru = "^0.7.2"
pyyaml = "^6.0.1"

[tool.poetry.extras]
tensorflow = ["tensorflow"]
torch = ["torch"]
ml = ["tensorflow", "torch", "optuna", "mlflow"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
ruff = "^0.4.4"
mypy = "^1.10.0"
pre-commit = "^3.7.0"
mkdocs-material = "^9.5.25"
mkdocs-macros-plugin = "^1.0.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 119
target-version = "py311"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "ASYNC"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true